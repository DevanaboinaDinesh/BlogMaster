{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./image.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"form\"];\nfunction ImageSelectorComponent_ng_container_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"img\", 18);\n    i0.ɵɵelementStart(2, \"span\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const image_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", image_r4.url, i0.ɵɵsanitizeUrl)(\"title\", image_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(image_r4.title);\n  }\n}\nfunction ImageSelectorComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵtemplate(2, ImageSelectorComponent_ng_container_7_div_2_Template, 4, 3, \"div\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const images_r2 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", images_r2);\n  }\n}\nclass ImageSelectorComponent {\n  constructor(imageService) {\n    this.imageService = imageService;\n    this.fileName = '';\n    this.title = '';\n  }\n  ngOnInit() {\n    this.getImages();\n  }\n  onFileUploadChange(event) {\n    const element = event.currentTarget;\n    this.file = element.files?.[0];\n  }\n  uploadImage() {\n    if (this.file && this.fileName !== '' && this.title !== '') {\n      this.imageService.uploadImage(this.file, this.fileName, this.title).subscribe({\n        next: response => {}\n      });\n    }\n  }\n  getImages() {\n    this.images$ = this.imageService.getAllImages();\n  }\n  static {\n    this.ɵfac = function ImageSelectorComponent_Factory(t) {\n      return new (t || ImageSelectorComponent)(i0.ɵɵdirectiveInject(i1.ImageService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ImageSelectorComponent,\n      selectors: [[\"app-image-selector\"]],\n      viewQuery: function ImageSelectorComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.imageUploadForm = _t.first);\n        }\n      },\n      decls: 23,\n      vars: 5,\n      consts: [[1, \"card\", \"h-100\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [1, \"d-flex\", \"flex-md-row\", \"flex-sm-column\", \"flex-wrap\"], [1, \"col-8\", \"p-4\", 2, \"overflow-y\", \"scroll\"], [4, \"ngIf\"], [1, \"col-4\", \"p-4\", \"bg-light\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"mt-3\"], [\"type\", \"file\", 1, \"form-control\", 3, \"change\"], [\"type\", \"text\", \"placeholder\", \"File name\", \"name\", \"filename\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Title\", \"name\", \"Title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\"], [1, \"d-flex\", \"flex-wrap\"], [\"style\", \"min-width: 100px; justify-content: center; cursor: pointer;\", \"class\", \"me-1 bg-white d-flex align-item-center flex-column border p-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"me-1\", \"bg-white\", \"d-flex\", \"align-item-center\", \"flex-column\", \"border\", \"p-3\", 2, \"min-width\", \"100px\", \"justify-content\", \"center\", \"cursor\", \"pointer\"], [2, \"height\", \"100px\", 3, \"src\", \"title\"], [1, \"mt-1\"]],\n      template: function ImageSelectorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n          i0.ɵɵtext(3, \"Images\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5);\n          i0.ɵɵtemplate(7, ImageSelectorComponent_ng_container_7_Template, 3, 1, \"ng-container\", 6);\n          i0.ɵɵpipe(8, \"async\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 7)(10, \"h5\");\n          i0.ɵɵtext(11, \"Upload Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"form\", 8, 9);\n          i0.ɵɵlistener(\"ngSubmit\", function ImageSelectorComponent_Template_form_ngSubmit_12_listener() {\n            return ctx.uploadImage();\n          });\n          i0.ɵɵelementStart(14, \"div\", 10)(15, \"input\", 11);\n          i0.ɵɵlistener(\"change\", function ImageSelectorComponent_Template_input_change_15_listener($event) {\n            return ctx.onFileUploadChange($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 10)(17, \"input\", 12);\n          i0.ɵɵlistener(\"ngModelChange\", function ImageSelectorComponent_Template_input_ngModelChange_17_listener($event) {\n            return ctx.fileName = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\", 10)(19, \"input\", 13);\n          i0.ɵɵlistener(\"ngModelChange\", function ImageSelectorComponent_Template_input_ngModelChange_19_listener($event) {\n            return ctx.title = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"div\", 10)(21, \"button\", 14);\n          i0.ɵɵtext(22, \"Upload\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(8, 3, ctx.images$));\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.fileName);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.title);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.AsyncPipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { ImageSelectorComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","image_r4","url","ɵɵsanitizeUrl","title","ɵɵtextInterpolate","ɵɵelementContainerStart","ɵɵtemplate","ImageSelectorComponent_ng_container_7_div_2_Template","ɵɵelementContainerEnd","images_r2","ImageSelectorComponent","constructor","imageService","fileName","ngOnInit","getImages","onFileUploadChange","event","element","currentTarget","file","files","uploadImage","subscribe","next","response","images$","getAllImages","ɵɵdirectiveInject","i1","ImageService","selectors","viewQuery","ImageSelectorComponent_Query","rf","ctx","ImageSelectorComponent_ng_container_7_Template","ɵɵlistener","ImageSelectorComponent_Template_form_ngSubmit_12_listener","ImageSelectorComponent_Template_input_change_15_listener","$event","ImageSelectorComponent_Template_input_ngModelChange_17_listener","ImageSelectorComponent_Template_input_ngModelChange_19_listener","ɵɵpipeBind1"],"sources":["D:\\Repos\\CodePulse\\UI\\codepulse\\src\\app\\features\\shared\\components\\image-selector\\image-selector.component.ts","D:\\Repos\\CodePulse\\UI\\codepulse\\src\\app\\features\\shared\\components\\image-selector\\image-selector.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ImageService } from './image.service';\nimport { Observable } from 'rxjs';\nimport { BlogImage } from '../../models/blog-image.model';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-image-selector',\n  templateUrl: './image-selector.component.html',\n  styleUrls: ['./image-selector.component.css']\n})\nexport class ImageSelectorComponent implements OnInit{\n  private file?: File;\n  fileName: string= '';\n  title: string='';\n  images$?: Observable<BlogImage[]>;\n  @ViewChild('form', {static:false}) imageUploadForm?: NgForm;\n  constructor(private imageService: ImageService){\n\n  }\n  ngOnInit(): void {\n    this.getImages();\n  }\n  onFileUploadChange(event: Event) : void{\n    const element=event.currentTarget as HTMLInputElement;\n    this.file=element.files?.[0];\n  }\n  uploadImage():void{\n    if(this.file && this.fileName !== '' && this.title !== '')\n    {\n      this.imageService.uploadImage(this.file,this.fileName,this.title).subscribe({\n        next: (response)=>{\n          \n        }\n      });\n    }\n  }\n\n  private getImages(){\n    this.images$ = this.imageService.getAllImages();\n  }\n\n}\n","<div class=\"card h-100\">\n    <div class=\"card-header\">\n        <h3 class=\"card-title\">Images</h3>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"d-flex flex-md-row flex-sm-column flex-wrap\">\n\n            <div class=\"col-8 p-4\"  style=\"overflow-y: scroll;\">\n                <ng-container *ngIf=\"images$ | async as images\">\n                    <div class=\"d-flex flex-wrap\">\n                        <div *ngFor=\"let image of images\"\n                        style=\"min-width: 100px; justify-content: center; cursor: pointer;\"\n                        class=\"me-1 bg-white d-flex align-item-center flex-column border p-3\">\n                            <img [src]=\"image.url\" [title]=\"image.title\" style=\"height: 100px;\">\n                            <span class=\"mt-1\">{{image.title}}</span>\n                        </div>\n\n                    </div>\n                </ng-container>\n            </div>\n\n            <div class=\"col-4 p-4 bg-light\">\n                <h5>Upload Image</h5>\n                <form #form=\"ngForm\" (ngSubmit)=\"uploadImage()\">\n                    <div class=\"mt-3\">\n                        <input type=\"file\" class=\"form-control\" (change)=\"onFileUploadChange($event)\">\n                    </div>\n\n                    <div class=\"mt-3\">\n                        <input type=\"text\" class=\"form-control\"\n                        placeholder=\"File name\" name=\"filename\" [(ngModel)]=\"fileName\">\n                    </div>\n                    <div class=\"mt-3\">\n                        <input type=\"text\" class=\"form-control\"\n                        placeholder=\"Title\" name=\"Title\" [(ngModel)]=\"title\">\n                    </div>\n                    <div class=\"mt-3\">\n                        <button type=\"submit\" class=\"btn btn-dark\">Upload</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}