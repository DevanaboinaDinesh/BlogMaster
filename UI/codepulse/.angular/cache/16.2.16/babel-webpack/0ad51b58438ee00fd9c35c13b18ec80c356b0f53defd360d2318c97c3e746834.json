{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass AuthInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    return next.handle(request);\n  }\n  static {\n    this.ɵfac = function AuthInterceptor_Factory(t) {\n      return new (t || AuthInterceptor)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n}\nexport { AuthInterceptor };","map":{"version":3,"names":["AuthInterceptor","constructor","intercept","request","next","handle","factory","ɵfac"],"sources":["D:\\Repos\\CodePulse\\UI\\codepulse\\src\\app\\core\\interceptors\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    \n    return next.handle(request);\n  }\n}\n"],"mappings":";AASA,MACaA,eAAe;EAE1BC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IAExD,OAAOA,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC;EAC7B;;;uBAPWH,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAM,OAAA,EAAfN,eAAe,CAAAO;IAAA;EAAA;;SAAfP,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}