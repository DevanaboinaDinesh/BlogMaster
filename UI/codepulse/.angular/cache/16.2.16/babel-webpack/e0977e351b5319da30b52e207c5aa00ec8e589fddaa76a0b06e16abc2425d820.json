{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.$user = new BehaviorSubject(undefined);\n  }\n  login(request) {\n    return this.http.post(`${environment.apiBaseUrl}/api/Auth/login`, {\n      Email: request.email,\n      Password: request.password\n    });\n  }\n  setUser(user) {\n    this.$user.next(user);\n    localStorage.setItem('user-email', user.email);\n    localStorage.setItem('user-roles', user.roles.join(','));\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { AuthService };","map":{"version":3,"names":["BehaviorSubject","environment","AuthService","constructor","http","$user","undefined","login","request","post","apiBaseUrl","Email","email","Password","password","setUser","user","next","localStorage","setItem","roles","join","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Repos\\CodePulse\\UI\\codepulse\\src\\app\\features\\auth\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { LoginRequest } from '../models/login-request.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LoginResponse } from '../models/login-response.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  $user = new BehaviorSubject<User | undefined>(undefined);\n  constructor(private http: HttpClient) { }\n\n  login(request : LoginRequest) : Observable<LoginResponse>{\n    return this.http.post<LoginResponse>(`${environment.apiBaseUrl}/api/Auth/login` , {\n      Email : request.email,\n      Password: request.password\n    });\n  }\n\nsetUser(user: User) : void{\n  this.$user.next(user);\n  localStorage.setItem('user-email', user.email);\n  localStorage.setItem('user-roles',user.roles.join(','));\n}\n\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;AAGlD,SAASC,WAAW,QAAQ,0CAA0C;;;AAGtE,MAGaC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,KAAK,GAAG,IAAIL,eAAe,CAAmBM,SAAS,CAAC;EAChB;EAExCC,KAAKA,CAACC,OAAsB;IAC1B,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAgB,GAAGR,WAAW,CAACS,UAAU,iBAAiB,EAAG;MAChFC,KAAK,EAAGH,OAAO,CAACI,KAAK;MACrBC,QAAQ,EAAEL,OAAO,CAACM;KACnB,CAAC;EACJ;EAEFC,OAAOA,CAACC,IAAU;IAChB,IAAI,CAACX,KAAK,CAACY,IAAI,CAACD,IAAI,CAAC;IACrBE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,IAAI,CAACJ,KAAK,CAAC;IAC9CM,YAAY,CAACC,OAAO,CAAC,YAAY,EAACH,IAAI,CAACI,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;EACzD;;;uBAhBanB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXvB,WAAW;MAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;SAEP1B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}