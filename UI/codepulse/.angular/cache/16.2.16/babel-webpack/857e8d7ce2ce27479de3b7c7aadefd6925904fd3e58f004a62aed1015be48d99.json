{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ImageService {\n  constructor(http) {\n    this.http = http;\n    this.selectedImage = new BehaviorSubject({\n      id: '',\n      fileExtension: '',\n      fileName: '',\n      title: '',\n      url: ''\n    });\n  }\n  getAllImages() {\n    return this.http.get(`${environment.apiBaseUrl}/api/Images`);\n  }\n  uploadImage(file, fileName, title) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('fileName', fileName);\n    formData.append('title', title);\n    return this.http.post(`${environment.apiBaseUrl}/api/Images`, formData);\n  }\n  selectImage(image) {\n    this.selectedImage.next(image);\n  }\n  static {\n    this.ɵfac = function ImageService_Factory(t) {\n      return new (t || ImageService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ImageService,\n      factory: ImageService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { ImageService };","map":{"version":3,"names":["BehaviorSubject","environment","ImageService","constructor","http","selectedImage","id","fileExtension","fileName","title","url","getAllImages","get","apiBaseUrl","uploadImage","file","formData","FormData","append","post","selectImage","image","next","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Repos\\CodePulse\\UI\\codepulse\\src\\app\\features\\shared\\components\\image-selector\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { BlogImage } from '../../models/blog-image.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  selectedImage: BehaviorSubject<BlogImage> = new BehaviorSubject<BlogImage>({\n    id: '',\n    fileExtension: '',\n    fileName: '',\n    title: '',\n    url: ''\n  });\n  constructor(private http: HttpClient) { }\n\n  getAllImages(): Observable<BlogImage[]>{\n    return this.http.get<BlogImage[]>(`${environment.apiBaseUrl}/api/Images`);\n  }\n  uploadImage(file: File, fileName:string, title:string) : Observable<BlogImage>{\n    const formData= new FormData();\n    formData.append('file',file);\n    formData.append('fileName', fileName);\n    formData.append('title', title);\n    return this.http.post<BlogImage>(`${environment.apiBaseUrl}/api/Images`, formData);    \n  }\n  selectImage(image:BlogImage):void{\n    this.selectedImage.next(image);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;AAGlD,SAASC,WAAW,QAAQ,0CAA0C;;;AAEtE,MAGaC,YAAY;EAQvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPxB,KAAAC,aAAa,GAA+B,IAAIL,eAAe,CAAY;MACzEM,EAAE,EAAE,EAAE;MACNC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE;KACN,CAAC;EACsC;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAc,GAAGX,WAAW,CAACY,UAAU,aAAa,CAAC;EAC3E;EACAC,WAAWA,CAACC,IAAU,EAAEP,QAAe,EAAEC,KAAY;IACnD,MAAMO,QAAQ,GAAE,IAAIC,QAAQ,EAAE;IAC9BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAACH,IAAI,CAAC;IAC5BC,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEV,QAAQ,CAAC;IACrCQ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAET,KAAK,CAAC;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACe,IAAI,CAAY,GAAGlB,WAAW,CAACY,UAAU,aAAa,EAAEG,QAAQ,CAAC;EACpF;EACAI,WAAWA,CAACC,KAAe;IACzB,IAAI,CAAChB,aAAa,CAACiB,IAAI,CAACD,KAAK,CAAC;EAChC;;;uBAtBWnB,YAAY,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZxB,YAAY;MAAAyB,OAAA,EAAZzB,YAAY,CAAA0B,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA;;SAEP3B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}