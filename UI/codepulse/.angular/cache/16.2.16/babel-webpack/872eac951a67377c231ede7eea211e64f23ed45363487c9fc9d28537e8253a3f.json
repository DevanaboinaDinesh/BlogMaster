{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AuthService } from '../services/auth.service';\nexport const authGuard = (route, state) => {\n  const cookieService = inject(CookieService);\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  let token = cookieService.get('Authorization');\n  if (token) {} else {\n    authService.logout();\n    return router.createUrlTree(['/login'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n  }\n  // Check the JWT Token\n};","map":{"version":3,"names":["inject","Router","CookieService","AuthService","authGuard","route","state","cookieService","authService","router","token","get","logout","createUrlTree","queryParams","returnUrl","url"],"sources":["D:\\Repos\\CodePulse\\UI\\codepulse\\src\\app\\features\\auth\\guards\\auth.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AuthService } from '../services/auth.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n   const cookieService = inject(CookieService);\n   const authService = inject(AuthService);\n   const router = inject(Router);\n   let token=cookieService.get('Authorization');\n   if(token){\n\n   }\n   else\n   {\n    authService.logout();\n    return router.createUrlTree(['/login'], {queryParams : {returnUrl : state.url}})\n   }\n  // Check the JWT Token\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACtD,MAAMC,aAAa,GAAGP,MAAM,CAACE,aAAa,CAAC;EAC3C,MAAMM,WAAW,GAAGR,MAAM,CAACG,WAAW,CAAC;EACvC,MAAMM,MAAM,GAAGT,MAAM,CAACC,MAAM,CAAC;EAC7B,IAAIS,KAAK,GAACH,aAAa,CAACI,GAAG,CAAC,eAAe,CAAC;EAC5C,IAAGD,KAAK,EAAC,C,CAER,MAED;IACCF,WAAW,CAACI,MAAM,EAAE;IACpB,OAAOH,MAAM,CAACI,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE;MAACC,WAAW,EAAG;QAACC,SAAS,EAAGT,KAAK,CAACU;MAAG;IAAC,CAAC,CAAC;;EAElF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}