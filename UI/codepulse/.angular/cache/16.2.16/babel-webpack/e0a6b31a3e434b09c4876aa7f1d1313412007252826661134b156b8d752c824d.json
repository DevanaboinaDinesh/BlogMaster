{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nclass AuthInterceptor {\n  constructor(cookieService) {\n    this.cookieService = cookieService;\n  }\n  intercept(request, next) {\n    const authRequest = request.clone({\n      setHeaders: {\n        'Authorization': this.cookieService.get('Authorization')\n      }\n    });\n    return next.handle(authRequest);\n  }\n  static {\n    this.ɵfac = function AuthInterceptor_Factory(t) {\n      return new (t || AuthInterceptor)(i0.ɵɵinject(i1.CookieService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n}\nexport { AuthInterceptor };","map":{"version":3,"names":["AuthInterceptor","constructor","cookieService","intercept","request","next","authRequest","clone","setHeaders","get","handle","i0","ɵɵinject","i1","CookieService","factory","ɵfac"],"sources":["D:\\Repos\\CodePulse\\UI\\codepulse\\src\\app\\core\\interceptors\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor( private cookieService: CookieService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    \n    const authRequest = request.clone({\n      setHeaders: { \n        'Authorization' : this.cookieService.get('Authorization')\n      }\n    });\n    return next.handle(authRequest);\n  }\n}\n"],"mappings":";;AAUA,MACaA,eAAe;EAE1BC,YAAqBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;EAAkB;EAEpDC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IAExD,MAAMC,WAAW,GAAGF,OAAO,CAACG,KAAK,CAAC;MAChCC,UAAU,EAAE;QACV,eAAe,EAAG,IAAI,CAACN,aAAa,CAACO,GAAG,CAAC,eAAe;;KAE3D,CAAC;IACF,OAAOJ,IAAI,CAACK,MAAM,CAACJ,WAAW,CAAC;EACjC;;;uBAZWN,eAAe,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;IAAA;EAAA;;;aAAfd,eAAe;MAAAe,OAAA,EAAff,eAAe,CAAAgB;IAAA;EAAA;;SAAfhB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}