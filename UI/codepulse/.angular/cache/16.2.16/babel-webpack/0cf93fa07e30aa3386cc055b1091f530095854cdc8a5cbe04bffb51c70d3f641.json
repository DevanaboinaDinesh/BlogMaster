{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nclass CategoryService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n  }\n  addCategory(model) {\n    return this.http.post(`${environment.apiBaseUrl}/api/categories?addAuth=true`, model);\n  }\n  getAllCategories(query, sortBy, sortDirection, pageNumber, pageSize) {\n    let params = new HttpParams();\n    if (query) {\n      params = params.set('query', query);\n    }\n    if (sortBy) {\n      params = params.set('sortBy', sortBy);\n    }\n    if (sortDirection) {\n      params = params.set('sortDirection', sortDirection);\n    }\n    if (pageNumber) {\n      params = params.set('pageNumber', pageNumber);\n    }\n    if (pageSize) {\n      params = params.set('pageSize', pageSize);\n    }\n    return this.http.get(`${environment.apiBaseUrl}/api/categories`, {\n      params: params\n    });\n  }\n  getCategoryById(id) {\n    return this.http.get(`${environment.apiBaseUrl}/api/categories/${id}`);\n  }\n  updateCategory(id, updateCategoryRequest) {\n    return this.http.put(`${environment.apiBaseUrl}/api/categories/${id}?addAuth=true`, updateCategoryRequest);\n  }\n  deleteCategory(id) {\n    return this.http.delete(`${environment.apiBaseUrl}/api/categories/${id}?addAuth=true`);\n  }\n  getCategoryCount() {\n    return this.http.get(`${environment.apiBaseUrl}/api/categories/count`);\n  }\n  static {\n    this.ɵfac = function CategoryService_Factory(t) {\n      return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CategoryService,\n      factory: CategoryService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { CategoryService };","map":{"version":3,"names":["HttpParams","environment","CategoryService","constructor","http","cookieService","addCategory","model","post","apiBaseUrl","getAllCategories","query","sortBy","sortDirection","pageNumber","pageSize","params","set","get","getCategoryById","id","updateCategory","updateCategoryRequest","put","deleteCategory","delete","getCategoryCount","i0","ɵɵinject","i1","HttpClient","i2","CookieService","factory","ɵfac","providedIn"],"sources":["D:\\Repos\\CodePulse\\UI\\codepulse\\src\\app\\features\\category\\services\\category.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AddCategoryRequest } from '../Models/add-category-request.model';\nimport { Observable } from 'rxjs';\nimport { Category } from '../Models/categoriy.model';\nimport { environment } from 'src/environments/environment.development';\nimport { UpdateCategoryRequest } from '../Models/update-category-request.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private http: HttpClient , private cookieService : CookieService) { }\n\n  addCategory(model: AddCategoryRequest):Observable<void>{\n      return this.http.post<void>(`${environment.apiBaseUrl}/api/categories?addAuth=true`,model);\n  }\n  getAllCategories(query? : string, sortBy? : string, sortDirection? : string,\n    pageNumber?: number, pageSize?: number):Observable<Category[]>{\n     let params = new HttpParams();\n     if(query)\n     {\n      params=params.set('query',query);     \n     }\n     if(sortBy)\n     {\n      params = params.set('sortBy',sortBy);      \n     }\n     if(sortDirection)\n     {\n      params = params.set('sortDirection',sortDirection);\n     }\n     if(pageNumber)\n     {\n      params = params.set('pageNumber',pageNumber);\n     }\n     if(pageSize)\n     {\n       params = params.set('pageSize',pageSize);\n     }\n      return this.http.get<Category[]>(`${environment.apiBaseUrl}/api/categories`,{\n        params : params\n      });\n  }\n  getCategoryById(id:string):Observable<Category>{\n    return this.http.get<Category>(`${environment.apiBaseUrl}/api/categories/${id}`)\n  }\n  updateCategory(id: string, updateCategoryRequest: UpdateCategoryRequest): Observable<Category> {\n    return this.http.put<Category>(`${environment.apiBaseUrl}/api/categories/${id}?addAuth=true`,updateCategoryRequest);\n  }\n  deleteCategory(id:string):Observable<Category>{\n    return this.http.delete<Category>(`${environment.apiBaseUrl}/api/categories/${id}?addAuth=true`);\n  }\n  getCategoryCount():Observable<number>{\n    return this.http.get<number>(`${environment.apiBaseUrl}/api/categories/count`)\n  }\n\n}\n"],"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAK7D,SAASC,WAAW,QAAQ,0CAA0C;;;;AAItE,MAGaC,eAAe;EAE1BC,YAAoBC,IAAgB,EAAWC,aAA6B;IAAxD,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,aAAa,GAAbA,aAAa;EAAoB;EAEhFC,WAAWA,CAACC,KAAyB;IACjC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,GAAGP,WAAW,CAACQ,UAAU,8BAA8B,EAACF,KAAK,CAAC;EAC9F;EACAG,gBAAgBA,CAACC,KAAe,EAAEC,MAAgB,EAAEC,aAAuB,EACzEC,UAAmB,EAAEC,QAAiB;IACrC,IAAIC,MAAM,GAAG,IAAIhB,UAAU,EAAE;IAC7B,IAAGW,KAAK,EACR;MACCK,MAAM,GAACA,MAAM,CAACC,GAAG,CAAC,OAAO,EAACN,KAAK,CAAC;;IAEjC,IAAGC,MAAM,EACT;MACCI,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,QAAQ,EAACL,MAAM,CAAC;;IAErC,IAAGC,aAAa,EAChB;MACCG,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,eAAe,EAACJ,aAAa,CAAC;;IAEnD,IAAGC,UAAU,EACb;MACCE,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,YAAY,EAACH,UAAU,CAAC;;IAE7C,IAAGC,QAAQ,EACX;MACEC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,UAAU,EAACF,QAAQ,CAAC;;IAEzC,OAAO,IAAI,CAACX,IAAI,CAACc,GAAG,CAAa,GAAGjB,WAAW,CAACQ,UAAU,iBAAiB,EAAC;MAC1EO,MAAM,EAAGA;KACV,CAAC;EACN;EACAG,eAAeA,CAACC,EAAS;IACvB,OAAO,IAAI,CAAChB,IAAI,CAACc,GAAG,CAAW,GAAGjB,WAAW,CAACQ,UAAU,mBAAmBW,EAAE,EAAE,CAAC;EAClF;EACAC,cAAcA,CAACD,EAAU,EAAEE,qBAA4C;IACrE,OAAO,IAAI,CAAClB,IAAI,CAACmB,GAAG,CAAW,GAAGtB,WAAW,CAACQ,UAAU,mBAAmBW,EAAE,eAAe,EAACE,qBAAqB,CAAC;EACrH;EACAE,cAAcA,CAACJ,EAAS;IACtB,OAAO,IAAI,CAAChB,IAAI,CAACqB,MAAM,CAAW,GAAGxB,WAAW,CAACQ,UAAU,mBAAmBW,EAAE,eAAe,CAAC;EAClG;EACAM,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACtB,IAAI,CAACc,GAAG,CAAS,GAAGjB,WAAW,CAACQ,UAAU,uBAAuB,CAAC;EAChF;;;uBA7CWP,eAAe,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;IAAA;EAAA;;;aAAf9B,eAAe;MAAA+B,OAAA,EAAf/B,eAAe,CAAAgC,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA;;SAEPjC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}