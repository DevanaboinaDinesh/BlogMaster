{"ast":null,"code":"import { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nclass CategoryService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n  }\n  addCategory(model) {\n    return this.http.post(`${environment.apiBaseUrl}/api/categories`, model);\n  }\n  getAllCategories() {\n    return this.http.get(`${environment.apiBaseUrl}/api/categories`);\n  }\n  getCategoryById(id) {\n    return this.http.get(`${environment.apiBaseUrl}/api/categories/${id}`);\n  }\n  updateCategory(id, updateCategoryRequest) {\n    return this.http.put(`${environment.apiBaseUrl}/api/categories/${id}`, updateCategoryRequest, {\n      headers: {\n        'Authorization': this.cookieService.get('Authorization')\n      }\n    });\n  }\n  deleteCategory(id) {\n    return this.http.delete(`${environment.apiBaseUrl}/api/categories/${id}`, {\n      headers: {\n        'Authorization': this.cookieService.get('Authorization')\n      }\n    });\n  }\n  static {\n    this.ɵfac = function CategoryService_Factory(t) {\n      return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CategoryService,\n      factory: CategoryService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { CategoryService };","map":{"version":3,"names":["environment","CategoryService","constructor","http","cookieService","addCategory","model","post","apiBaseUrl","getAllCategories","get","getCategoryById","id","updateCategory","updateCategoryRequest","put","headers","deleteCategory","delete","i0","ɵɵinject","i1","HttpClient","i2","CookieService","factory","ɵfac","providedIn"],"sources":["D:\\Repos\\CodePulse\\UI\\codepulse\\src\\app\\features\\category\\services\\category.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AddCategoryRequest } from '../Models/add-category-request.model';\nimport { Observable } from 'rxjs';\nimport { Category } from '../Models/categoriy.model';\nimport { environment } from 'src/environments/environment.development';\nimport { UpdateCategoryRequest } from '../Models/update-category-request.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private http: HttpClient , private cookieService : CookieService) { }\n\n  addCategory(model: AddCategoryRequest):Observable<void>{\n      return this.http.post<void>(`${environment.apiBaseUrl}/api/categories`,model);\n  }\n  getAllCategories():Observable<Category[]>{\n      return this.http.get<Category[]>(`${environment.apiBaseUrl}/api/categories`);\n  }\n  getCategoryById(id:string):Observable<Category>{\n    return this.http.get<Category>(`${environment.apiBaseUrl}/api/categories/${id}`)\n  }\n  updateCategory(id: string, updateCategoryRequest: UpdateCategoryRequest): Observable<Category> {\n    return this.http.put<Category>(`${environment.apiBaseUrl}/api/categories/${id}`,updateCategoryRequest , {\n      headers : {\n        'Authorization' : this.cookieService.get('Authorization'),\n      }\n    });\n  }\n  deleteCategory(id:string):Observable<Category>{\n    return this.http.delete<Category>(`${environment.apiBaseUrl}/api/categories/${id}`,{\n      headers : {\n        'Authorization' : this.cookieService.get('Authorization'),\n      }\n    });\n  }\n\n}\n"],"mappings":"AAKA,SAASA,WAAW,QAAQ,0CAA0C;;;;AAItE,MAGaC,eAAe;EAE1BC,YAAoBC,IAAgB,EAAWC,aAA6B;IAAxD,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,aAAa,GAAbA,aAAa;EAAoB;EAEhFC,WAAWA,CAACC,KAAyB;IACjC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,GAAGP,WAAW,CAACQ,UAAU,iBAAiB,EAACF,KAAK,CAAC;EACjF;EACAG,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAa,GAAGV,WAAW,CAACQ,UAAU,iBAAiB,CAAC;EAChF;EACAG,eAAeA,CAACC,EAAS;IACvB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAW,GAAGV,WAAW,CAACQ,UAAU,mBAAmBI,EAAE,EAAE,CAAC;EAClF;EACAC,cAAcA,CAACD,EAAU,EAAEE,qBAA4C;IACrE,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAW,GAAGf,WAAW,CAACQ,UAAU,mBAAmBI,EAAE,EAAE,EAACE,qBAAqB,EAAG;MACtGE,OAAO,EAAG;QACR,eAAe,EAAG,IAAI,CAACZ,aAAa,CAACM,GAAG,CAAC,eAAe;;KAE3D,CAAC;EACJ;EACAO,cAAcA,CAACL,EAAS;IACtB,OAAO,IAAI,CAACT,IAAI,CAACe,MAAM,CAAW,GAAGlB,WAAW,CAACQ,UAAU,mBAAmBI,EAAE,EAAE,EAAC;MACjFI,OAAO,EAAG;QACR,eAAe,EAAG,IAAI,CAACZ,aAAa,CAACM,GAAG,CAAC,eAAe;;KAE3D,CAAC;EACJ;;;uBA1BWT,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;IAAA;EAAA;;;aAAfvB,eAAe;MAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA;;SAEP1B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}